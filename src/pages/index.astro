---
import Layout from '../Layout.astro';

import AstroJs from '../components/AstroJs.astro';
import SolidJs from '../components/SolidJs.solid.tsx';
import VueJs from '../components/VueJs.vue';
import LitJs from '../components/LitJs.ts';
import React18Js from '../components/ReactJs18.react.tsx';
import SvelteJs from '../components/SvelteJs.svelte';
import PreactJs from '../components/PreactJs.preact.tsx';

const frameworks = [
	{ id: 'PureHTML', title: 'Pure HTML with CDN import maps' },
	{
		id: 'Astro',
		title: 'Astro 3 (SSR) + TypeScript only (client DOM, no UI framework)',
	},
	{ id: 'Solid', title: 'Solid 1' },
	{ id: 'Lit', title: 'Lit 2' },
	{ id: 'Vue', title: 'Vue 3' },
	{ id: 'React18', title: 'React 18' },
	{ id: 'Svelte', title: 'Svelte 4' },
	{ id: 'Preact', title: 'Preact 10' },
] as const;
---

<Layout>
	<main>
		<nav>
			<em>Jump to:</em>
			{
				frameworks.map((framework) => (
					<div>
						<a href={`#${framework.id}`}>{framework.title}</a>
					</div>
				))
			}

			<hr />

			<div>
				or
				<a href="/flavored">See flavored forms</a> (Material, System…)
			</div>
		</nav>

		{
			frameworks.map(({ id, title }) => (
				<section id={id}>
					<h2>{title}</h2>

					{() => {
						// NOTE: client:only cannot be dynamic so this is needed…
						switch (id) {
							case 'PureHTML':
								return (
									<div>
										This is a static HTML page (embedded in an iframe). Open{' '}
										<a href="/pure-html.html">
											<code>pure-html.html</code>
										</a>{' '}
										and see the source code.
										<iframe src="pure-html.html" />
									</div>
								);
							case 'Astro':
								return <AstroJs />;
							case 'Solid':
								return <SolidJs client:only="solid-js" />;
							case 'Lit':
								return <LitJs client:only="lit" />;
							case 'Vue':
								return <VueJs client:only="vue" />;
							case 'React18':
								return <React18Js client:only="react" />;
							case 'Svelte':
								return <SvelteJs client:only="svelte" />;
							case 'Preact':
								return <PreactJs client:only="preact" />;
							default:
								return 'No framework found';
						}
					}}
				</section>
			))
		}
	</main>
</Layout>

<style is:global>
	@import '../themes/shoelace.scss';
</style>
